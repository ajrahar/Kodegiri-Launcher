{
  "swagger": "2.0",
  "info": {
    "title": "My API Web Launcher for CRM",
    "description": "This is documentation for My API Web Launcher for CRM",
    "version": "1.0.0"
  },
  "host": "localhost:3000/api",
  "basePath": "/",
  "tags": [
    {
      "name": "Authorization",
      "description": "Endpoints for authentication"
    },
    {
      "name": "Link",
      "description": "Endpoints for Link"
    },
    {
      "name": "User",
      "description": "Endpoints for User"
    }
  ],
  "schemes": [
    "http"
  ],
  "securityDefinitions": {
    "Bearer": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header",
      "description": "Enter the token with 'Bearer ' prefix (e.g., 'Bearer your-token')"
    }
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/user/auth/login": {
      "post": {
        "tags": [
          "Authorization"
        ],
        "description": "Endpoint to post a authentication",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "description": "Auth information.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Login"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/users": {
      "get": {
        "tags": [
          "User"
        ],
        "description": "Endpoint to get all user",
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/user/{user_ID}": {
      "get": {
        "tags": [
          "User"
        ],
        "description": "Endpoint to get a user based ID",
        "parameters": [
          {
            "name": "user_ID",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "patch": {
        "tags": [
          "User"
        ],
        "description": "Endpoint to update a user based ID",
        "parameters": [
          {
            "name": "user_ID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "obj",
            "in": "body",
            "description": "Updated User information.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateUser"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "User"
        ],
        "description": "Endpoint to delete a user based ID",
        "parameters": [
          {
            "name": "user_ID",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/user": {
      "post": {
        "tags": [
          "User"
        ],
        "description": "Endpoint to post a user",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "description": "User information.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddUser"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "409": {
            "description": "Conflict"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/links": {
      "get": {
        "tags": [
          "Link"
        ],
        "description": "Endpoint to get all link",
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "Link"
        ],
        "description": "Endpoint to post a link",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "description": "Link information.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddLink"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/link/{link_ID}": {
      "get": {
        "tags": [
          "Link"
        ],
        "description": "Endpoint to get a link based ID",
        "parameters": [
          {
            "name": "link_ID",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "patch": {
        "tags": [
          "Link"
        ],
        "description": "Endpoint to update a link based ID",
        "parameters": [
          {
            "name": "link_ID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "obj",
            "in": "body",
            "description": "Updated Link information.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateLink"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Link"
        ],
        "description": "Endpoint to delete a link based ID",
        "parameters": [
          {
            "name": "link_ID",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    }
  },
  "definitions": {
    "Crm": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "example": "object"
        },
        "properties": {
          "type": "object",
          "properties": {
            "title": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "string"
                },
                "example": {
                  "type": "string",
                  "example": "My CRM Title"
                }
              }
            },
            "url": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "string"
                },
                "example": {
                  "type": "string",
                  "example": "https://example.com"
                }
              }
            }
          }
        }
      }
    },
    "Login": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "example": "admin@gmail.com"
        },
        "password": {
          "type": "string",
          "example": "admin"
        }
      }
    },
    "AddUser": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": ""
        },
        "email": {
          "type": "string",
          "example": ""
        },
        "password": {
          "type": "string",
          "example": ""
        },
        "isAdmin": {
          "type": "boolean",
          "example": false
        }
      }
    },
    "UpdateUser": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": ""
        },
        "email": {
          "type": "string",
          "example": ""
        },
        "password": {
          "type": "string",
          "example": ""
        },
        "isAdmin": {
          "type": "boolean",
          "example": false
        }
      }
    },
    "AddLink": {
      "type": "object",
      "properties": {
        "user_ID": {
          "type": "string",
          "example": ""
        },
        "title": {
          "type": "string",
          "example": ""
        },
        "url": {
          "type": "string",
          "example": ""
        }
      }
    },
    "UpdateLink": {
      "type": "object",
      "properties": {
        "user_ID": {
          "type": "string",
          "example": ""
        },
        "title": {
          "type": "string",
          "example": ""
        },
        "url": {
          "type": "string",
          "example": ""
        }
      }
    }
  },
  "security": [
    {
      "Bearer": []
    }
  ]
}